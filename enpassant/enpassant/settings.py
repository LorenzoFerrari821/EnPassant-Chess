"""
Django settings for enpassant project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'j0ti+s02ebaj+_^af9^1-#)q+e)$*@4x_nkva1)07s_^d*@4nc'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []
CORS_ORIGIN_ALLOW_ALL = True

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    )
}

# Application definition
INSTALLED_APPS = [
    # Django Apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Mie applicazioni
    'users',
    'game',
    'mobile',

    # Third party apps
    'debug_toolbar',  # App strumenti django, ad esempio controllo query.
    'admin_numeric_filter',  # Filtri numerici admin
    'django_countries',  # Gestione paesi
    'rangefilter',  # Filtro con date
    'django_admin_listfilter_dropdown',  # Menù a tendina admin,
    'channels',  # Django Channels, per websocket.
    'crispy_forms',  # Per rendering di form con bootstrap
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',

]

CRISPY_TEMPLATE_PACK = 'bootstrap4'

# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_PASSWORD =  #Password here
EMAIL_HOST_USER =  #Email here
EMAIL_PORT = 587
EMAIL_USE_TLS = True

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

AUTH_USER_MODEL = 'users.User'
LOGIN_URL = '/users/login'
LOGIN_REDIRECT_URL = '/game/lobby/'  # Se non specificato ridirigiamo alla lobby
LOGOUT_REDIRECT_URL = '/'  # Ridirigiamo alla home

SESSION_EXPIRE_AT_BROWSER_CLOSE = False
# Scadenza cookie una settimana, di default sono 2 settimane. Migliora l'aggiornamento dell'attività utenti.
SESSION_COOKIE_AGE = 60 * 60 * 24 * 7

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',  # Supporto toolbar django
]

INTERNAL_IPS = [  # Sempre supporto toolbar django, indica quale ip monitorare
    '127.0.0.1',
]

ROOT_URLCONF = 'enpassant.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static'
]

MEDIA_ROOT = BASE_DIR / 'static/'  # Radice locazione del filesystem per le immagini caricate, non su db per prestazioni
MEDIA_URL = '/media/'  # Path alla cartella specifica visualizzato nel browser, URL pubblico

ASGI_APPLICATION = "enpassant.asgi.application"  # Punta all'applicazione che gestisce il routing.

'''
Django e channels comunicano attraverso un broker, un intermediario che gestisce la comunicazione. Quando un client 
utilizza il websocket per connettersi viene rappresentato come un "layer" di channels. Il broker permette anche a layer 
diversi di comunicare tra loro, con Django in mezzo. Come broker uso una soluzione locale interna a channels.
'''

CHANNEL_LAYERS = {
    'default': {
        "BACKEND": "channels.layers.InMemoryChannelLayer"
    },
}
